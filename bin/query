#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative "../lib/query-ruby"
require "dorian/arguments"

parsed =
  Dorian::Arguments.parse(
    input: {
      type: :string,
      alias: :i
    },
    parse: {
      type: :boolean,
      alias: :p
    },
    decompile: {
      type: :boolean,
      alias: :d
    },
    combine: {
      type: :boolean,
      alias: :c
    },
    version: {
      type: :boolean,
      alias: :v
    },
    help: {
      type: :boolean,
      alias: :h
    }
  )

abort Query::Version.to_s if parsed.options.version
abort parsed.help if parsed.options.help

inputs = [parsed.options.input.to_s]
inputs += parsed.arguments
inputs += parsed.files.map { |file| File.read(file) }

input = inputs.join(" ")

if parsed.options.parse
  pp Query::Parser.parse(input).to_raw
elsif parsed.options.decompile
  puts Query.decompile(Query.evaluate(input))
elsif parsed.options.combine
  puts Query.combine(*inputs)
else
  pp Query.evaluate(input)
end
